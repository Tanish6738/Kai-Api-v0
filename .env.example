# KeySentry Environment Configuration Example
# Copy this file to .env and configure according to your environment

# =============================================================================
# REQUIRED SETTINGS
# =============================================================================

# Port for the Flask application
PORT=5000

# Flask environment (development, production)
FLASK_ENV=production

# Secret key for Flask sessions (GENERATE A STRONG RANDOM KEY!)
SECRET_KEY=change-this-to-a-strong-random-secret-key

# =============================================================================
# OPTIONAL SETTINGS
# =============================================================================

# Maximum file size to scan (in bytes)
MAX_FILE_SIZE=10485760

# Maximum number of files to scan per repository  
MAX_FILES_SCAN=1000

# Repository cloning timeout in seconds
CLONE_TIMEOUT=60

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Enable development features (true/false)
DEVELOPMENT_MODE=false

# =============================================================================
# DEPLOYMENT SETTINGS
# =============================================================================

# Deployment platform identifier
DEPLOYMENT_PLATFORM=local

# Health check endpoint
HEALTH_ENDPOINT=/health

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Never commit .env files to version control
# 2. Generate a strong SECRET_KEY using: python -c "import secrets; print(secrets.token_hex(32))"
# 3. Use environment-specific configurations for different deployment stages
# 4. Regularly rotate secrets and API keys
# 5. Use secure secret management services in production
